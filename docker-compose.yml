version: "3.7"

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "50"

services:
  lpdc:
    image: lblod/frontend-lpdc:0.11.0
    environment:
      EMBER_ACMIDM_SCOPE: "openid rrn profile vo abb_lpdc"
      # The next variables are environment-specific.
      # These should be overriden in docker-compose.override.yml
      EMBER_LOKET_URL: "<LOKET_URL>"
      EMBER_IPDC_URL: "<IPDC_URL>"
      EMBER_ACMIDM_CLIENT_ID: "<ACMIDM_CLIENT_ID>"
      EMBER_ACMIDM_AUTH_URL: "<ACMIDM_AUTH_URL>"
      EMBER_ACMIDM_LOGOUT_URL: "<ACMIDM_LOGOUT_URL>"
      EMBER_ACMIDM_AUTH_REDIRECT_URL: "<ACMIDM_AUTH_REDIRECT_URL>"
      EMBER_ACMIDM_SWITCH_REDIRECT_URL: "<ACMIDM_SWITCH_REDIRECT_URL>"
    links:
      - identifier:backend
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  identifier:
    image: semtech/mu-identifier:1.10.0
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  dispatcher:
    image: semtech/mu-dispatcher:2.1.0-beta.2
    volumes:
      - ./config/dispatcher:/config
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  deltanotifier:
    image: cecemel/delta-notifier:0.2.0-beta.3
    depends_on:
      migrations:
        condition: service_healthy
    volumes:
      - ./config/delta:/config
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  database:
    image: semtech/mu-authorization:feature-service-roam-r1.1
    depends_on:
      migrations:
        condition: service_healthy
      virtuoso:
        condition: service_started
    environment:
      MU_SPARQL_ENDPOINT: "http://virtuoso:8890/sparql"
      DATABASE_OVERLOAD_RECOVERY: "true"
      # DATABASE_COMPATIBILITY: "Virtuoso"
      # Note: not sure whether it gets picked up properly; it is meant for healing-process which may make
      # heavy queries
      QUERY_MAX_PROCESSING_TIME: 605000
      QUERY_MAX_EXECUTION_TIME: 605000
    volumes:
      - ./config/authorization:/config
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  virtuoso:
    image: redpencil/virtuoso:1.2.0-rc.1
    environment:
      SPARQL_UPDATE: "true"
      DEFAULT_GRAPH: "http://mu.semte.ch/application"
    volumes:
      - ./data/db:/data
      - ./config/virtuoso/virtuoso.ini:/data/virtuoso.ini # Note: Override this setting on production
      - ./config/virtuoso/:/opt/virtuoso-scripts
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  migrations:
    image: semtech/mu-migrations-service:0.8.0
    depends_on:
      virtuoso:
        condition: service_started
    environment:
      MU_SPARQL_TIMEOUT: "500"
      BATCH_SIZE: "1000"
    volumes:
      - ./config/migrations:/data/migrations
      - ./health_checks:/tmp/health_checks
    links:
      - virtuoso:database
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
    healthcheck:
      test: [ "CMD-SHELL", "chmod +x /tmp/health_checks/migrations-healthcheck.sh; /tmp/health_checks/migrations-healthcheck.sh" ]
      interval: 5s
      timeout: 5s
      start_period: 30s
      retries: 200

  cache:
    image: semtech/mu-cache:2.0.2
    links:
      - resource:backend
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  resource:
    image: semtech/mu-cl-resources:feature-supply-info-on-empty-included
    depends_on:
      migrations:
        condition: service_healthy
    environment:
      CACHE_CLEAR_PATH: "http://cache/.mu/clear-keys"
    volumes:
      - ./config/resources:/config
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  login:
    image: lblod/acmidm-login-service:0.9.2
    environment:
      LOG_SINK_URL: "http://sink"
      MU_APPLICATION_AUTH_ROLE_CLAIM: "abb_lpdc_rol_3d"
      # The next variables are environment-specific.
      # These should be overriden in docker-compose.override.yml
      MU_APPLICATION_AUTH_DISCOVERY_URL: "<ACM_IDM_AUTH_DISCOVERY_URL>"
      MU_APPLICATION_AUTH_CLIENT_ID: "<ACM_IDM_AUTH_CLIENT_ID>"
      MU_APPLICATION_AUTH_REDIRECT_URI: "<ACMIDM_AUTH_REDIRECT_URI>"
      MU_APPLICATION_AUTH_CLIENT_SECRET: "<ACMIDM_AUTH_CLIENT_SECRET>"
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  sink:
    image: nginx:1.25.1
    volumes:
      - ./config/sink/sink.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  ################################################################################
  # Report generation and dashboard specific services
  ################################################################################
  report-generation:
    image: lblod/loket-report-generation-service:0.6.3
    depends_on:
      migrations:
        condition: service_healthy
    volumes:
      - ./data/files:/share
      - ./config/reports/:/config/
    links:
      - virtuoso:database # for heavy reporting queries; we prefer going directly to virtuoso
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  dashboard:
    image: lblod/frontend-dashboard:1.6.0
    environment:
      EMBER_LOGIN_ROUTE: "mock-login"
    links:
      - identifier:backend
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  file:
    image: cecemel/file-service:3.3.0
    depends_on:
      migrations:
        condition: service_healthy
    volumes:
      - ./data/files:/share
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  ################################################################################
  # LPDC-specific Services
  ################################################################################
  lpdc-management:
    image: lblod/lpdc-management-service:0.37.1
    depends_on:
      migrations:
        condition: service_healthy
    environment:
      LOG_SPARQL_ALL: "false"
      LOG_SPARQL_QUERIES: "false"
      LOG_SPARQL_UPDATES: "false"
      DEBUG_AUTH_HEADERS: "false"
      ADRESSEN_REGISTER_API_KEY: "<ADRESSEN_REGISTER_API_KEY>"
      MU_SPARQL_ENDPOINT: 'http://database:8890/sparql'
      MU_APPLICATION_GRAPH: "http://mu.semte.ch/application"
      INSTANCE_SNAPSHOT_PROCESSING_CRON_PATTERN: "*/5 * * * *" # run the job every 5 minutes
    labels:
      - "logging=true"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost" ]
      interval: 5s
      timeout: 5s
      start_period: 30s
      retries: 200

  lpdc-publish:
    image: lblod/lpdc-publish-service:0.17.0
    depends_on:
      migrations:
        condition: service_healthy
    environment:
      LOG_SPARQL_ALL: "false"
      LOG_SPARQL_QUERIES: "false"
      LOG_SPARQL_UPDATES: "false"
      DEBUG_AUTH_HEADERS: "false"
      CRON_PATTERN: "*/5 * * * *" # every 5 minutes
      # The next variables are environment-specific.
      # Best to override in docker-compose.override.yml
      IPDC_JSON_ENDPOINT: "<IPDC endpoint url>"
      IPDC_X_API_KEY: "<IPDC api key>"
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  ldes-consumer-conceptsnapshot-ipdc:
    image: redpencil/ldes-consumer:0.7.1
    depends_on:
      lpdc-management:
        condition: service_healthy
      migrations:
        condition: service_healthy
    environment:
      LDES_STREAM: "https://ipdc.tni-vlaanderen.be/doc/conceptsnapshot"
      LDES_ENDPOINT_VIEW: "https://ipdc.tni-vlaanderen.be/doc/conceptsnapshot?limit=25&pageNumber=0" # first page of the stream
      LDES_RELATION_PATH: "http://www.w3.org/ns/prov#generatedAtTime"
      CRON_PATTERN: "*/5 * * * *" # run the job every 5 minutes
      LDES_POLLING_INTERVAL: 3600000 # since ipdcs caching headers indicate no caching, this means the polling interval to initiate the request again (3 600 000 millis = 1 hour)
      REPLACE_VERSIONS: "false" # we query snapshots. snapshots don't change ...
      MU_APPLICATION_GRAPH: "http://mu.semte.ch/graphs/lpdc/conceptsnapshots-ldes-data/ipdc"
      # The next variables are environment-specific.
      # Best to override in docker-compose.override.yml
      LDES_ENDPOINT_HEADER_X-API-KEY: "<your endpoint api key here>"
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
 ################################################################################
  # SUBMISSION SERVICES
  ################################################################################

  download-url:
    image: lblod/download-url-service:1.0.3
    environment:
      CACHING_MAX_RETRIES: "10"
    volumes:
      - ./data/files:/share
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  automatic-submission:
    image: lblod/automatic-submission-service:1.4.0
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  import-submission:
    image: lblod/import-submission-service:1.3.0
    volumes:
      - ./data/files:/share
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  enrich-submission:
    image: lblod/enrich-submission-service:1.11.0
    environment:
      ACTIVE_FORM_FILE: "share://semantic-forms/20240527111832-forms.ttl"
    volumes:
      - ./config/semantic-forms:/share/semantic-forms
      - ./data/files/submissions:/share/submissions
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  validate-submission:
    image: lblod/validate-submission-service:1.2.1
    environment:
      MAX_BODY_SIZE: "10000kb"
    volumes:
      - ./config/semantic-forms:/share/semantic-forms
      - ./data/files/submissions:/share/submissions
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  export-submissions:
    image: lblod/mandaten-download-generator-service:0.3.6-hotfix_4
    links:
      - virtuoso:database
    environment:
      EXPORT_CRON_PATTERN: "0 0 3 * * *"
      EXPORT_FILE_BASE: "submissions"
      MU_APPLICATION_GRAPH: "http://mu.semte.ch/graphs/system/export-submissions"
    volumes:
      - ./data/exports/submissions:/data/exports
      - ./config/export/submissions:/config
    restart: always
    logging: *default-logging

  clean-up-submission:
    image: lblod/clean-up-submission-service:1.1.0
    volumes:
      - ./data/files:/share
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  prepare-submissions-for-export:
    image: lblod/prepare-submissions-for-export-service:0.11.0
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
 ################################################################################
  # END SUBMISSION SERVICES
  ################################################################################
 ################################################################################
  # DELTA SUBMISSIONS: START
  ################################################################################
  delta-producer-background-jobs-initiator:
    image: lblod/delta-producer-background-jobs-initiator:1.0.0
    volumes:
      - ./config/delta-producer/background-jobs-initiator:/config
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  delta-producer-publication-graph-maintainer:
    image: lblod/delta-producer-publication-graph-maintainer:1.2.2
    environment:
      MAX_BODY_SIZE: "50mb"
      PRETTY_PRINT_DIFF_JSON: "true"
      PUBLICATION_VIRTUOSO_ENDPOINT: "http://publication-triplestore:8890/sparql"
      PUBLICATION_MU_AUTH_ENDPOINT: "http://publication-triplestore:8890/sparql"
      SUDO_QUERY_RETRY_FOR_HTTP_STATUS_CODES: "404,500,503"
      CONFIG_SERVICES_JSON_PATH: '/config/publication-graph-maintainer/config.json'
    volumes:
      - ./config/delta-producer:/config
      - ./data/files/:/share
    # Temporary disable to no saturate the app-http-logger (should be fixed in a next version)
    #    labels:
    #      - "logging=true"
    restart: always
    logging: *default-logging
  ################################################################################
  # DELTA SUBMISSIONS: END
  ################################################################################

